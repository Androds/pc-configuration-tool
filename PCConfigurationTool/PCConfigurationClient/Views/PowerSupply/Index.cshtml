@model IEnumerable<PCConfiguration.Data.Models.PowerSupply>

@{
    ViewData["Title"] = "Index";
}

@section Scripts {
    <script type="text/javascript">
        var url = '@Url.Action("Add", "PowerSupply")';

        $(".btnAdd").click(function () {
            var row = $(this).closest('tr');
            var quantity = parseInt(row.find('#item_Quantity').val(), 10);
            var imageSrc = row.find('.zoom').attr('src');
            if (quantity > 0) {
                $.post(url, { id: $(this).data('id'), quantity: quantity, imageSrc }, function (result) {
                    $(".toast-body").html('<img src="' + result.imageSrc + '" class="zoom" height="32px" width="32px" alt="Image" /> ' + result.name + ' added.');
                    $('.toast').toast('show');
                });
            }
    });
    </script>
}

<div class="title">
    <h1>Choose Power Supply</h1>
</div>

<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Efficiency)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Wattage)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Modular)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.FormFactor)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Quantity)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Price)
            </th>
            <th></th>
        </tr>
    </thead>
    <tfoot>
        <tr>
            <td>
            </td>
            <td>
            </td>
            <td>
            </td>
            <td>
            </td>
            <td>
            </td>
            <td>
            </td>
            <td>
            </td>            
            <td>
                @Html.ActionLink("Next", "Index", "Summary", null, new { @class = "btnNext" })
            </td>
        </tr>
    </tfoot>
    <tbody>
        @foreach (var item in Model)
        {
        <tr>
            <td class="product-name">
                <img src="@Url.Content(item.ImageSrc)" class="zoom" alt="Image" />
                @Html.DisplayFor(modelItem => item.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Efficiency)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Wattage)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Modular)
                <label class="css-label" />
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.FormFactor.Name)
            </td>
            <td>
                <div class="number-input">
                    <button onclick="this.parentNode.querySelector('input[type=number]').stepDown()"></button>
                    @Html.EditorFor(modelItem => item.Quantity, new { htmlAttributes = new { @class = "quantity", @Value = "1" } })
                    <button onclick="this.parentNode.querySelector('input[type=number]').stepUp()" class="plus"></button>
                </div>
                @Html.ValidationMessageFor(modelItem => item.Quantity)
            </td>
            <td class="product-price">
                @String.Format("{0:c}", item.Price)
            </td>
            <td>
                <button type="button" class="btnAdd" data-id="@item.Id">Add</button>
            </td>
        </tr>
        }
    </tbody>
</table>
