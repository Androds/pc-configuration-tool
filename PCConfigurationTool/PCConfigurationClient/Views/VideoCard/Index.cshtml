@model IEnumerable<PCConfiguration.Data.Models.VideoCard>

@{
    ViewData["Title"] = "Index";
}

@section Scripts {
    <script type="text/javascript">
        var url = '@Url.Action("Add", "VideoCard")';

        $(".btnAdd").click(function () {
            var row = $(this).closest('tr');
        var quantity = parseInt(row.find('#item_Quantity').val(), 10);
            $.post(url, { id: $(this).data('id'), quantity: quantity }, function (result) { });
    });
    </script>
}

    <div class="title">
        <h1>Choose Video Card</h1>
    </div>

    <table class="table">
        <thead>
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.Name)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Chipset)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.MemorySize)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.CoreSpeed)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.BoostSpeed)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Interface)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Quantity)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Price)
                </th>
                <th></th>
            </tr>
        </thead>
        <tfoot>
            <tr>
                <td>
                </td>
                <td>
                </td>
                <td>
                </td>
                <td>
                </td>
                <td>
                </td>
                <td>
                </td>
                <td>
                </td>
                <td>
                </td>
                <td>
                    @Html.ActionLink("Next", "Index", "Storage", null, new { @class = "btnNext" })
                </td>
            </tr>
        </tfoot>
        <tbody>
            @foreach (var item in Model)
            {
                <tr>
                    <td class="product-name">
                        @Html.DisplayFor(modelItem => item.Name)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Chipset)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.MemorySize)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.CoreSpeed)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.BoostSpeed)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Interface.Id)
                    </td>
                    <td>
                        <div class="number-input">
                            <button onclick="this.parentNode.querySelector('input[type=number]').stepDown()"></button>
                            @Html.EditorFor(modelItem => item.Quantity, new { htmlAttributes = new { @class = "quantity", @Value = "1" } })
                            <button onclick="this.parentNode.querySelector('input[type=number]').stepUp()" class="plus"></button>
                        </div>
                        @Html.ValidationMessageFor(modelItem => item.Quantity)
                    </td>
                    <td class="product-name">
                        @String.Format("{0:c}", item.Price)
                    </td>
                    <td>
                        <button type="button" class="btnAdd" data-id="@item.Id">Add</button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
