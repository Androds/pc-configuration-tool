@page
@model PCConfiguration.Client.VideoCardModel

@{
    ViewData["Title"] = "Index";
}

@Html.AntiForgeryToken()

@section Scripts {
    <script type="text/javascript">
        var url = '/videocard';
        $(".btnAdd").click(function () {
            var row = $(this).closest('tr');
            var quantity = parseInt(row.find('#item_Quantity').val(), 10);
            var imageSrc = row.find('.zoom').attr('src');
            if (quantity > 0) {
                $.ajax({
                    type: "POST",
                    url: url,
                    data: { id: $(this).data('id'), quantity: quantity, imageSrc },
                    headers: { "RequestVerificationToken": $('input[name="__RequestVerificationToken"]').val() },
                    success: function (result) {
                        $(".toast-body").html('<img src="' + result.imageSrc + '" class="zoom" height="32px" width="32px" alt="Image" /> ' + result.name + ' added.');
                        $('.toast').toast('show');
                    }
                });
            }
        });
    </script>
}

<div class="title">
    <h1>Choose Video Card</h1>
</div>

<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.VideoCards.FirstOrDefault().Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.VideoCards.FirstOrDefault().Chipset)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.VideoCards.FirstOrDefault().MemorySize)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.VideoCards.FirstOrDefault().CoreSpeed)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.VideoCards.FirstOrDefault().BoostSpeed)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.VideoCards.FirstOrDefault().Interface)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.VideoCards.FirstOrDefault().Quantity)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.VideoCards.FirstOrDefault().Price)
            </th>
            <th></th>
        </tr>
    </thead>
    <tfoot>
        <tr>
            <td>
            </td>
            <td>
            </td>
            <td>
            </td>
            <td>
            </td>
            <td>
            </td>
            <td>
            </td>
            <td>
            </td>
            <td>
            </td>
            <td>
                <a class="btnNext" href="@Url.Page("./storage")">Next</a>
            </td>
        </tr>
    </tfoot>
    <tbody>
        @foreach (var item in Model.VideoCards)
        {
            <tr>
                <td class="product-name">
                    <img src="@Url.Content(item.ImageSrc)" class="zoom" alt="Image" />
                    @Html.DisplayFor(modelItem => item.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Chipset)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.MemorySize)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.CoreSpeed)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.BoostSpeed)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Interface.Id)
                </td>
                <td>
                    <div class="number-input">
                        <button onclick="this.parentNode.querySelector('input[type=number]').stepDown()"></button>
                        @Html.EditorFor(modelItem => item.Quantity, new { htmlAttributes = new { @class = "quantity", @Value = "1" } })
                        <button onclick="this.parentNode.querySelector('input[type=number]').stepUp()" class="plus"></button>
                    </div>
                    @Html.ValidationMessageFor(modelItem => item.Quantity)
                </td>
                <td class="product-price">
                    @String.Format("{0:c}", item.Price)
                </td>
                <td>
                    <button type="button" class="btnAdd" data-id="@item.Id">Add</button>
                </td>
            </tr>
        }
    </tbody>
</table>
